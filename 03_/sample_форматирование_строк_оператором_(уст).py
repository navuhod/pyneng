# форматирование строк может быть использовано в ситуациях:
# - необходимо подставить значение в строку по определенному шаблону 
# - необходимо отформатировать вывод столбцами
# - надо конвертировать числа в двоичный формат

# существует два варианта форматирования строк:
# - методом format() (новый, РЕКОМЕНДОВАННЫЙ вариант)
# - с оператором % (старый вариант)

print("*"*11, "форматирование строк оператором %", "*"*11, '\n'*2)
# print("|"+" "*14, "форматирование строк оператором %", " "*14+"|")
print("interface FastEthernet0/%s" % '1', '\n'*2)

# синтаксис оператора %
# %s - строка, или любой другой обьект со строковым представлением
# %d - тип переменной integer
# %f - тип переменной float

# пример вывода данных столбцами одинаковой ширины по 15 знако-полей, с выравниванием по правой стороне 
vlan, mac, intf = ['100', 'aabb.cc80.7000', 'GiO/1']
print("%15s %15s %15s" % (vlan, mac, intf))
# пример вывода данных столбцами одинаковой ширины по 15 знако-полей, с выравниванием по левой стороне 
print("%-15s %-15s %-15s" % (vlan, mac, intf), '\n'*2)

# с помошью форматирования можно влиять на формат отображение чисел
print("явно указываем количество знаков после запятой: %.3f" % (10.0/3))
print(" "*52+"^")
print("%"+".3f"+" %", "("+"10.0"+"/"+"3"+")", "_"*36+"|")